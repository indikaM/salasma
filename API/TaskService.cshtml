
@using log4net;
@{
  

}
@{
    var webMethod = Request.QueryString["method"];
    if(!webMethod.IsEmpty()){
        if(webMethod.Equals("getTodayTasks")){
          Json.Write(getDailyTasks(), Response.Output);
        }else if(webMethod.Equals("getTomorrowTasks")){
          Json.Write(getDailyTasks(), Response.Output);
        }else if(webMethod.Equals("getDayAfterTasks")){
          Json.Write(getDailyTasks(), Response.Output);
        }else if(webMethod.Equals("getDailyTasks")){
          Json.Write(getDailyTasks(), Response.Output);
        }else if(webMethod.Equals("addTask")){
          Json.Write(addTask(), Response.Output);
        }else if(webMethod.Equals("updateTask")){
          Json.Write(updateTask(), Response.Output);
        }
       
    }
}


    
@functions{
 Service dataService = new Service();
 public List <Task> getDailyTasks(){
      var userID = Request.QueryString["userID"];
      var passWord = Request.QueryString["passWord"];
      var date = Request.QueryString["date"];
      List <Task> taskList = dataService.GetTasksForSpecificDate(date);
      if(taskList.Count==0){
          new Task();
      }
      return taskList;    
 }   


 public string addTask(){
     System.IO.StreamReader sr = new  System.IO.StreamReader(Request.InputStream);
     string jsonString = String.Empty;
     jsonString = sr.ReadToEnd();
     Task task =  Json.Decode<Task>(jsonString);
     return dataService.SaveTask(task).ToString();
 }

 public string updateTask(){
     log4net.ILog logger = log4net.LogManager.GetLogger(); 
     System.IO.StreamReader sr = new  System.IO.StreamReader(Request.InputStream);
     string jsonString = String.Empty;
     jsonString = sr.ReadToEnd();
     logger.Debug(jsonString);
     Task task =  Json.Decode<Task>(jsonString);
     return dataService.UpdateTask(task).ToString();
 }

}



